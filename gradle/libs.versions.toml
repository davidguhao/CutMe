[versions]
agp = "8.1.4"
com-github-bumptech-glide-compose = "1.0.0-beta01"
coreKtx = "1.12.0"
kotlin = "1.9.20"
compose = "1.5.4"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
media3ExoplayerDash = "1.0.0"
mobileFfmpegFull = "4.4.LTS"
runtimeLivedata = "1.6.0-alpha07"

[libraries]
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "media3ExoplayerDash" }
androidx-media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3ExoplayerDash" }
androidx-media3-decoder = { module = "androidx.media3:media3-decoder", version.ref = "media3ExoplayerDash" }
androidx-media3-database = { module = "androidx.media3:media3-database", version.ref = "media3ExoplayerDash" }
androidx-media3-cast = { module = "androidx.media3:media3-cast", version.ref = "media3ExoplayerDash" }
androidx-media3-datasource-rtmp = { module = "androidx.media3:media3-datasource-rtmp", version.ref = "media3ExoplayerDash" }
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3ExoplayerDash" }
androidx-media3-datasource-cronet = { module = "androidx.media3:media3-datasource-cronet", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3ExoplayerDash" }
androidx-media3-test-utils-robolectric = { module = "androidx.media3:media3-test-utils-robolectric", version.ref = "media3ExoplayerDash" }
androidx-media3-test-utils = { module = "androidx.media3:media3-test-utils", version.ref = "media3ExoplayerDash" }
androidx-media3-transformer = { module = "androidx.media3:media3-transformer", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer-workmanager = { module = "androidx.media3:media3-exoplayer-workmanager", version.ref = "media3ExoplayerDash" }
androidx-media3-extractor = { module = "androidx.media3:media3-extractor", version.ref = "media3ExoplayerDash" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3ExoplayerDash" }
androidx-media3-ui-leanback = { module = "androidx.media3:media3-ui-leanback", version.ref = "media3ExoplayerDash" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer-ima = { module = "androidx.media3:media3-exoplayer-ima", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer-rtsp = { module = "androidx.media3:media3-exoplayer-rtsp", version.ref = "media3ExoplayerDash" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3ExoplayerDash" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "runtimeLivedata" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "com-github-bumptech-glide-compose" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
mobile-ffmpeg-full = { module = "com.arthenica:mobile-ffmpeg-full", version.ref = "mobileFfmpegFull" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
